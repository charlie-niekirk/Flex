package me.cniekirk.flex.data.remote.model.pushshift


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

@JsonClass(generateAdapter = true)
data class DeletedComment(
    @Json(name = "all_awardings")
    val allAwardings: List<Any>? = null,
    @Json(name = "archived")
    val archived: Boolean? = null,
    @Json(name = "associated_award")
    val associatedAward: Any? = null,
    @Json(name = "author")
    val author: String? = null,
    @Json(name = "author_flair_background_color")
    val authorFlairBackgroundColor: Any? = null,
    @Json(name = "author_flair_css_class")
    val authorFlairCssClass: Any? = null,
    @Json(name = "author_flair_richtext")
    val authorFlairRichtext: List<Any>? = null,
    @Json(name = "author_flair_template_id")
    val authorFlairTemplateId: Any? = null,
    @Json(name = "author_flair_text")
    val authorFlairText: Any? = null,
    @Json(name = "author_flair_text_color")
    val authorFlairTextColor: Any? = null,
    @Json(name = "author_flair_type")
    val authorFlairType: String? = null,
    @Json(name = "author_fullname")
    val authorFullname: Int? = null,
    @Json(name = "author_is_blocked")
    val authorIsBlocked: Boolean? = null,
    @Json(name = "author_patreon_flair")
    val authorPatreonFlair: Boolean? = null,
    @Json(name = "author_premium")
    val authorPremium: Boolean? = null,
    @Json(name = "body")
    val body: String? = null,
    @Json(name = "body_sha1")
    val bodySha1: String? = null,
    @Json(name = "can_gild")
    val canGild: Boolean? = null,
    @Json(name = "collapsed")
    val collapsed: Boolean? = null,
    @Json(name = "collapsed_because_crowd_control")
    val collapsedBecauseCrowdControl: Any? = null,
    @Json(name = "collapsed_reason")
    val collapsedReason: Any? = null,
    @Json(name = "collapsed_reason_code")
    val collapsedReasonCode: Any? = null,
    @Json(name = "comment_type")
    val commentType: Any? = null,
    @Json(name = "controversiality")
    val controversiality: Int? = null,
    @Json(name = "created_utc")
    val createdUtc: Int? = null,
    @Json(name = "distinguished")
    val distinguished: Any? = null,
    @Json(name = "full_link")
    val fullLink: String? = null,
    @Json(name = "gilded")
    val gilded: Int? = null,
    @Json(name = "gildings")
    val gildings: Gildings? = null,
    @Json(name = "id")
    val id: String? = null,
    @Json(name = "is_submitter")
    val isSubmitter: Boolean? = null,
    @Json(name = "link_id")
    val linkId: Int? = null,
    @Json(name = "locked")
    val locked: Boolean? = null,
    @Json(name = "no_follow")
    val noFollow: Boolean? = null,
    @Json(name = "parent_id")
    val parentId: Long? = null,
    @Json(name = "permalink")
    val permalink: String? = null,
    @Json(name = "retrieved_utc")
    val retrievedUtc: Int? = null,
    @Json(name = "score")
    val score: Int? = null,
    @Json(name = "score_hidden")
    val scoreHidden: Boolean? = null,
    @Json(name = "send_replies")
    val sendReplies: Boolean? = null,
    @Json(name = "stickied")
    val stickied: Boolean? = null,
    @Json(name = "subreddit")
    val subreddit: String? = null,
    @Json(name = "subreddit_id")
    val subredditId: String? = null,
    @Json(name = "subreddit_name_prefixed")
    val subredditNamePrefixed: String? = null,
    @Json(name = "subreddit_type")
    val subredditType: String? = null,
    @Json(name = "top_awarded_type")
    val topAwardedType: Any? = null,
    @Json(name = "total_awards_received")
    val totalAwardsReceived: Int? = null,
    @Json(name = "treatment_tags")
    val treatmentTags: List<Any>? = null,
    @Json(name = "unrepliable_reason")
    val unrepliableReason: Any? = null
)